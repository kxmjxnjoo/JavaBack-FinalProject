<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ezen.springfeed.dao.IMemberDao">
	
	<resultMap id="MemberMap" type="java.util.HashMap"></resultMap>	
	
	<select id="getMember" statementType="CALLABLE" parameterType="java.util.HashMap">
		{  CALL getMember( 
			#{userid},
			#{ref_cursor , mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=MemberMap}
		)  }
	</select>
	
	<insert id="insertMember" statementType="CALLABLE" parameterType="java.util.HashMap">
		{  CALL insertMember( 
			#{userid},#{userpwd},#{name},#{email},#{phone}
		)}
	</insert>
	
	<select id="idCheck" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="_int">
		{  CALL idCheck( #{cnt, mode=OUT, jdbcType=INTEGER }, #{userid} )  }
	</select>
	
	
	<insert id="insertFollow" statementType="CALLABLE" parameterType="java.util.HashMap">
		{  CALL insertFollow( 
			#{follower}, #{followed}, #{result, mode=OUT, jdbcType=INTEGER } 
		)}
	</insert>
	
	<insert id="addNotification" statementType="CALLABLE" parameterType="java.util.HashMap">
		{  CALL addNotification( 
			#{followed}, #{follower}, #{notitype},
			#{notiresult, mode=OUT, jdbcType=INTEGER } 
		)}
	</insert>
	
	<delete id="unfollow" statementType="CALLABLE" parameterType="java.util.HashMap">
		{  CALL unfollow( 
			 #{follower}, #{followed},
			#{result, mode=OUT, jdbcType=INTEGER } 
		)}
	</delete>
	
	<select id="getNotification" statementType="CALLABLE" parameterType="java.util.HashMap">
		{  CALL getNotification(
		#{ref_cursor, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=MemberMap}, 
		#{userid} )  }
	</select>
	
</mapper>